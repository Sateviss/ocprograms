NAME
  pid - PID controllers for Minecraft
  
SYNOPSIS
  pid <action> file or id [var=value or =var ...] [--args ...]
  pid debug [ids ...]
  
DESCRIPTION
  Set up your PID controllers the easy way:
  Just create a controller file and run "pid run yourfile.pid". You controller is running in the background.
  The file name of a controller is used as an ID when none is given in the file.
  You can show and modify values using =var or var=value respectively:
   var                 meaning
     target    tgt  t    target value
     frequency freq f    update frequency in Hz
     p                   proportional factor
     i                   integral factor
     d                   derivative factor
     min                 minimum output value
     max                 maximum output value
  
  The actions "run" and "load" also accept the option "--args" followed by arguments that should be forwarded to the file being loaded.
  
ACTIONS
  pid needs an action parameter telling it what it has to do.
  
  run
    loads and starts a PID
  load
    loads a PID but doesn't start it
  update
    updates only (to update PID vars)
  unload
    stops and unregisters a PID
  start
    (re-)starts a PID
  stop
    stops a PID
    
  debug
    shows a debug screen - the most important parameters are displayed for each given controller
  
EXAMPLES
  pid run reactor.pid
    loads and starts the controller from file "reactor.pid"
    It's assigned the ID "reactor.pid" unless there is an overriding assignment in the file.
    
  pid load /pids/turbine.pid --args bada4648-3559-4784-b3c7-06c146d9dc3b
    loads the controller file "/pids/turbine.pid"
    The string argument "bada4648-3559-4784-b3c7-06c146d9dc3b" is used when loading the file.
    The controller is assigned the ID "turbine.pid" unless there is an overriding assignment in the file.

  pid start turbine.pid
    starts the controller "turbine.pid"
    
  pid update turbine.pid target=900
    reduces the speed of the turbine to 900 rpm
    
  pid debug reactor.pid turbine.pid
    displays debug information of two controllers in one screen
    Each controller needs 8 lines on the screen. Debug information isn't displayed if there isn't enough space left.
    You can leave the debug screen by doing a soft interrupt. (Ctrl + C)
    
  pid stop turbine.pid
    stops the given controller
    
  pid unload reactor.pid
    stops and unregisters the controller
